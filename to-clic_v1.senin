#!/usr/local/bin/bash -x
###  #!/usr/bin/env bash -x 

if [ ! -f $1 ]
then
    exit 0
fi

totalwc=$(wc -l $1 | awk '{print $1}')
declare -a my_string
couner=0

#head -n 7 nginx.org.log.2 | while read string
cat $1 | while read string
    do  let " couner = couner + 1 "
        if (( $(echo $string | grep -c "[0-9]") > 0 ))
        then
           echo $string | tr '"' ' ' | while read my_string[0] my_string[1] my_string[2] my_string[3] my_string[4] my_string[5] my_string[6] my_string[7] my_string[8] my_string[9] my_string[10] my_string[11]
            do my_string[12]=$(echo ${my_string[11]} | awk '{print $(NF)}')
                my_string[11]=$(echo ${my_string[11]} | awk '{$NF=""; print}')
#                echo ${my_string[12]}
              #my_string[3]=$(tail -n 1 nginx.org.log.2 | awk '{print $4}')
                n_date=${my_string[3]}
                my_string[3]=$(date -j -f "%d/%b/%Y" "$(echo $n_date | tr  -d "["  | awk -F '\:\|/' '{print $1"/"$2"/"$3}')" +%Y-%m-%d)
                my_string[4]=$(echo "${my_string[3]} $(echo $n_date | tr  -d "["  | awk -F '\:\|/' '{print $4":"$5":"$6}')" )
                my_string[13]=$(echo $n_date | tr  -d "[" )
                echo "String $couner from $totalwc"
              #echo ${my_string[3]}
              #echo ${my_string[4]}
##                for i in {0..13}
##                    do  
##
##                        #$(echo ${my_string[3]} | awk -F '\:\|/' '{print $3""$2""$1"/"$4":"$5":"$6}' )
##
##                        echo $i
##                        echo ${my_string[$i]}
##
##                        #
##                        #[02/Apr/2019:00:00:05 +0000]
##                        #echo $c | awk -F '\:\|/' '{print $3""$2""$1"/"$4":"$5":"$6}'
##                    done
####Log format:
#               log_format  main    '$remote_addr - $client_cn [$time_local] "$request" '
#                                   '$status $body_bytes_sent "$http_referer" '
#                                   '"$http_user_agent" "$http_x_forwarded_for"';
####table creation:
#                  CREATE TABLE main_nginx_access (
#   my_string[3]                 logdate Date,
#   my_string[4]                 logdatetime DateTime,
#   my_string[0]                 remote_addr String,
#   my_string[2]                 client_cn String,
#   my_string[13]                time_local String,
#   my_string[5]                 verb String,
#   my_string[6]                 request String,
#   my_string[7]                 httpversion String,
#   my_string[8]                 status UInt16,
#   my_string[9]                 body_bytes_sent UInt64,
#   my_string[11]                http_user_agent String,
#   my_string[12]                http_x_forwarded_for String
#                  ) Engine = MergeTree(logdate, (logdatetime), 8192);
######sample
#  0
#  81.28.162.252
#  1
#  -
#  2
#  -
#  3
#  2019-04-01
#  4
#  2019-04-01 00:00:03
#  5
#  GET
#  6
#  /packages/ubuntu/dists/trusty/nginx/i18n/Translation-en.gz
#  7
#  HTTP/1.1
#  8
#  404
#  9
#  4097
#  10
#  -
#  11
#  Debian APT-HTTP/1.3 (0.8.16~exp12ubuntu10.23)
#  12
#  -
                #put everything to ClickHouse:
#  echo '"2019-04-05", "2019-04-03 12:06:53", "3.120.207.46", "1",  "2", "4", "5", "6", "7", "8", "3", "2"' |  clickhouse-client --database=default --query="INSERT INTO main_nginx_access FORMAT CSV"
                #here is:
                echo "${my_string[3]}, ${my_string[4]}, ${my_string[0]}, ${my_string[2]}, ${my_string[13]}, ${my_string[5]}, ${my_string[6]}, ${my_string[7]}, ${my_string[8]}, ${my_string[9]}, ${my_string[11]}, ${my_string[12]}" | clickhouse-client --database=default --query="INSERT INTO main_nginx_access FORMAT CSV"
                done
        fi
    done

